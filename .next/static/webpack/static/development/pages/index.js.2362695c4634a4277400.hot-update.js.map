{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2362695c4634a4277400.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactFullpage from '@fullpage/react-fullpage';\r\n\r\nconst SEL = 'custom-section';\r\nconst SECTION_SEL = `.${SEL}`;\r\n\r\n// NOTE: if using fullpage extensions/plugins put them here and pass it as props\r\nconst pluginWrapper = () => {\r\n  /**\r\n   * require('fullpage.js/vendors/scrolloverflow'); // Optional. When using scrollOverflow:true\r\n   */\r\n};\r\n\r\nconst originalColors = ['#282c34', '#ff5f45', '#0798ec'];\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sectionsColor: [...originalColors],\r\n      fullpages: [\r\n        {\r\n          text: 'section 1',\r\n        },\r\n        {\r\n          text: 'section 2',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  onLeave(origin, destination, direction) {\r\n    console.log('onLeave', { origin, destination, direction });\r\n    // arguments are mapped in order of fullpage.js callback arguments do something\r\n    // with the event\r\n  }\r\n\r\n  /*\r\n  handleChangeColors() {\r\n    const newColors =\r\n      this.state.sectionsColor[0] === 'yellow'\r\n        ? [...originalColors]\r\n        : ['yellow', 'blue', 'white'];\r\n    this.setState({\r\n      sectionsColor: newColors,\r\n    });\r\n  }\r\n  */\r\n /*\r\n  handleAddSection() {\r\n    this.setState(state => {\r\n      const { fullpages } = state;\r\n      const { length } = fullpages;\r\n      fullpages.push({\r\n        text: `section ${length + 1}`,\r\n        id: Math.random(),\r\n      });\r\n\r\n      return {\r\n        fullpages: [...fullpages],\r\n      };\r\n    });\r\n  }\r\n\r\n  handleRemoveSection() {\r\n    this.setState(state => {\r\n      const { fullpages } = state;\r\n      const newPages = [...fullpages];\r\n      newPages.pop();\r\n\r\n      return { fullpages: newPages };\r\n    });\r\n  }\r\n  */\r\n \r\n  render() {\r\n    const { fullpages } = this.state;\r\n\r\n    if (!fullpages.length) {\r\n      return null;\r\n    }\r\n\r\n    // const Menu = () => (\r\n    //   <div\r\n    //     className=\"menu\"\r\n    //     style={{\r\n    //       position: 'fixed',\r\n    //       top: 0,\r\n    //       zIndex: 100,\r\n    //     }}\r\n    //   >\r\n    //     <ul>\r\n    //       <li>\r\n    //         <button onClick={() => this.handleAddSection()}>+ Section</button>\r\n    //         <button onClick={() => this.handleRemoveSection()}>\r\n    //           - Section\r\n    //         </button>\r\n    //         <button onClick={() => this.handleChangeColors()}>\r\n    //           Change colors\r\n    //         </button>\r\n    //       </li>\r\n    //     </ul>\r\n    //   </div>\r\n    // );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <Menu /> */}\r\n        <ReactFullpage\r\n          debug /* Debug logging */\r\n          navigation\r\n          // anchors={['firstPage', 'secondPage', 'thirdPage']}\r\n          sectionSelector={SECTION_SEL}\r\n          onLeave={this.onLeave.bind(this)}\r\n          sectionsColor={this.state.sectionsColor}\r\n          pluginWrapper={pluginWrapper}\r\n          render={comp => (\r\n            <ReactFullpage.Wrapper>\r\n              {fullpages.map(({ text }) => (\r\n                <div key={text} className={SEL}>\r\n                  <h1>{text}</h1>\r\n                </div>\r\n              ))}\r\n            </ReactFullpage.Wrapper>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const rootElement = document.getElementById('react-root');\r\n// ReactDOM.render(<App />, rootElement);\r\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAEA;AADA;AAIA;AADA;AANA;AAFA;AAaA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AADA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;;;;AAjHA;AAqHA;AACA;AACA;AADA;;;;A","sourceRoot":""}